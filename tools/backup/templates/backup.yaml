# Sample pod to be applied manually or scheduled when desired
# Executes a backup against the DB when tailored to the right endpoint.
# Copies resulting full backup to $BUCKET
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-neo4j-backup-{{ date "20060102150405" now }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/name: "graph-backup"
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: graph-backup
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: Always
          env:
          # Addr must include a host and port, but no scheme.  See the --from parameter here:
          # See https://neo4j.com/docs/operations-manual/current/backup/performing/
          - name: NEO4J_ADDR
            value: {{ .Values.neo4jaddr }}
          - name: DATABASE
            value: { { .Values.database } }
          - name: CLOUD_PROVIDER
            value: {{ .Values.cloudProvider }}
          - name: BUCKET
            value: {{ .Values.bucket }}
          - name: HEAP_SIZE
            value: {{ .Values.heapSize }}
          - name: PAGE_CACHE
            value: {{ .Values.pageCache }}
          - name: FALLBACK_TO_FULL
            value: "{{ .Values.fallbackToFull }}"
          - name: CHECK_CONSISTENCY
            value: "{{ .Values.checkConsistency }}"
          - name: CHECK_INDEXES
            value: "{{ .Values.checkIndexes }}"
          - name: CHECK_GRAPH
            value: "{{ .Values.checkGraph }}"
          - name: CHECK_LABEL_SCAN_STORE
            value: "{{ .Values.checkLabelScanStore }}"
          - name: CHECK_PROPERTY_OWNERS
            value: "{{ .Values.checkPropertyOwners }}"
          volumeMounts:
            - name: aws-credentials
              mountPath: /credentials/aws
              readOnly: true
            - name: gcp-credentials
              mountPath: /credentials/gcp
              readOnly: true
      volumes:
        - name: aws-credentials
          secret:
            secretName: neo4j-aws-credentials
            items:
              - key: credentials
                path: credentials
        - name: gcp-credentials
          secret:
            secretName: neo4j-gcp-credentials
            items:
              - key: credentials.json
                path: credentials.json
